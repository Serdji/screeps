/*
 * Module code goes here. Use 'module.exports' to export things:
 * module.exports.thing = 'a thing';
 *
 * You can import it from another modules like this:
 * var mod = require('CreepRoleMultiRoom');
 * mod.thing == 'a thing'; // true
 */

const CreepRole = require('CreepRole');

const {ROLE_MULTI_ROOM, LIMIT_MULTI_ROOM} = require('properties');

module.exports = class CreepRoleMultiRoom extends CreepRole {
  constructor(roomName) {
    super();
    this.roomName = roomName; // –ò–º—è –∫–æ–º–Ω–∞—Ç—ã, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—Ä–∏–ø—Å–∞
  }

  run(creep) {

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –∏–º—è –∫–æ–º–Ω–∞—Ç—ã –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –∫—Ä–∏–ø—Å —Å –∏–º–µ–Ω–µ–º –∫—É–¥–∞ –µ—Ö–µ—Ç—å
    // –µ–ª—Å–∏ –Ω–µ—Ç, –µ–¥–µ–º –≤ —Ç—É –∫–æ–º–Ω–∞—Ç—É
    if (creep.room.name !== this.roomName && !creep.memory.upgrading) {
      const exitDir = Game.map.findExit(creep.room, this.roomName);
      const exit = creep.pos.findClosestByRange(exitDir);
      creep.moveTo(exit);
      // –ö–∞–∫ –ø—Ä–∏–µ—Ö–∞–ª–∏ –≤ –Ω—É–∂–Ω—É—é –∫–æ–º–Ω–∞—Ç—É, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å
    } else {
      if (creep.memory.upgrading && creep.store[RESOURCE_ENERGY] === 0) {
        creep.memory.upgrading = false;
        creep.say('üîÑ –ö–æ–ø–∞—Ç—å');
      }
      if (!creep.memory.upgrading && creep.store.getFreeCapacity() === 0) {
        creep.memory.upgrading = true;
        creep.say('‚ö° –£–ø–≥—Ä–µ–π–¥–∏—Ç—å');
      }

      if (creep.memory.upgrading) {
        const constructions = creep.room.find(FIND_CONSTRUCTION_SITES);

        // –ï—Å—Ç–∏ –µ—Å—Ç—å —á—Ç–æ –ø–æ—Å—Ç–æ—Ä–æ–∏—Ç—å, —Å—Ç—Ä–æ–∏–º
        if (constructions.length) {
          const construction = Game.getObjectById(constructions[0].id)
          if (creep.build(construction) === ERR_NOT_IN_RANGE) {
            creep.moveTo(construction, {visualizePathStyle: {stroke: '#ffffff'}});
          }
        // –ï—Å–ª–∏ –Ω–µ—á–µ–≥–æ —Å—Ç–æ–∏—Ç—å –∏ –ø–æ–ª—å–Ω–æ—Å—Ç—å—é –∑–∞–±–∏—Ç –∫–ª–∞–¥, –µ–¥–µ–º –¥–æ–º–æ–π
        }  else {

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∏–º—è –¥–æ–º–∞—à–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–æ–º–Ω–æ—Ç–æ–π –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Å—è –∫—Ä–∏–ø—Å, –µ–¥–µ–º –≤ —Ç—É –∫–æ–º–Ω–∞—Ç—É
          if (creep.memory.roomName !== creep.room.name && creep.memory.upgrading) {
            const exitDir = Game.map.findExit(creep.room, creep.memory.roomName);
            const exit = creep.pos.findClosestByRange(exitDir);
            creep.moveTo(exit);
            // –ï—Å–ª–∏ –∏–º–µ–Ω–∞ —Å–æ–≤–ø–∞–ª–∏, –µ–¥–µ–º —É–±–≥—Ä–µ–π–∂–∏–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä
          } else {
            if (creep.upgradeController(creep.room.controller) === ERR_NOT_IN_RANGE) {
              creep.moveTo(creep.room.controller, {visualizePathStyle: {stroke: '#ffffff'}});
            }
          }
        }


      } else {
        super.mining(creep)
      }

    }

  }


  spawn() {
    super.spawn(ROLE_MULTI_ROOM + this.roomName, LIMIT_MULTI_ROOM);
  }
};
